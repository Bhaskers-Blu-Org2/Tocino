# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

# def options(opt):
#     pass

# def configure(conf):
#     conf.check_nonfatal(header_name='stdint.h', define_name='HAVE_STDINT_H')

def build(bld):
    module = bld.create_ns3_module('tocino', ['core', 'network'])
    module.source = [
        'model/callback-queue.cc',
        'model/tocino-channel.cc',
        'model/tocino-net-device-transmitter.cc',
        'model/tocino-net-device-receiver.cc',
        'model/tocino-net-device.cc',
        'model/tocino-flit-header.cc',
        'helper/tocino-helper.cc',
        ]

    module_test = bld.create_ns3_module_test_library('tocino')
    module_test.source = [
        #'test/tocino-3x3x3.cc',
        #'test/tocino-callbackqueue.cc',
        #'test/test-flit-header.cc',
        #'test/tocino-test-suite.cc',
        'test/htest.cc',
        ]

    headers = bld.new_task_gen(features=['ns3header'])
    headers.module = 'tocino'
    headers.source = [
        'model/tocino-enum.h',
        'model/callback-queue.h',
        'model/tocino-channel.h',
        'model/tocino-net-device-transmitter.h',
        'model/tocino-net-device-receiver.h',
        'model/tocino-net-device.h',
        'model/tocino-address.h',
        'model/tocino-flit-header.h',
        'helper/tocino-helper.h',
        ]

    if bld.env.ENABLE_EXAMPLES:
        bld.add_subdirs('examples')

    # bld.ns3_python_bindings()

